steps:
# 1 just fo Mongo DB
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'europe-docker.pkg.dev/container-412111/hogwarts/mongodb-loader', './mongodb_loader']
    id: 'Build MongoDB Loader Image'
    # Step to build the MongoDB Loader Docker image and tag it.

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'europe-docker.pkg.dev/container-412111/hogwarts/mongodb-loader']
    id: 'Push MongoDB Loader Image'
    # Step to push the MongoDB Loader Docker image to Artifact Registry.

  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['container', 'clusters', 'get-credentials', 'kubecluster', '--region', 'us-central1', '--project', '$PROJECT_ID']
    # Step to fetch cluster credentials for GKE cluster 'kubecluster' in the 'us-central1' region.

  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['auth', 'configure-docker', '--quiet']
    # Step to configure Docker with authentication for GCR.

  - name: 'google/cloud-sdk'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      kubectl apply -f mongodb-deployment.yaml
    id: 'Deploy to GKE'
    # Step to deploy the MongoDB application to Google Kubernetes Engine (GKE).


# 2 initializing MongoDB (put data inside)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'europe-docker.pkg.dev/container-412111/hogwarts/init-mongodb-data-fetcher', './mongodb_loader']
    id: 'Build Init MongoDB Data Fetcher Image'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'europe-docker.pkg.dev/container-412111/hogwarts/init-mongodb-data-fetcher']
    id: 'Push Init MongoDB Data Fetcher Image'
    
  - name: 'google/cloud-sdk'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      kubectl apply -f init-mongodb-data-fetcher-deployment.yaml
    id: 'Deploy Init MongoDB Data Fetcher to GKE'


  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['build', '-t', 'gcr.io/$PROJECT_ID/mysql-loader', './mysql_loader']
  #   id: 'Build MySQL Loader Image'

  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['push', 'gcr.io/$PROJECT_ID/mysql-loader']
  #   id: 'Push MySQL Loader Image'
  # #  sGKE
  # - name: 'gcr.io/cloud-builders/kubectl'
  #   args: ['apply', '-f', 'mongodb-deployment.yaml']
  #   id: 'Deploy MongoDB'
  #   env:
  #   - 'CLOUDSDK_COMPUTE_ZONE=your-zone'
  #   - 'CLOUDSDK_CONTAINER_CLUSTER=your-cluster'

  # - name: 'gcr.io/cloud-builders/kubectl'
  #   args: ['apply', '-f', 'mysql-deployment.yaml']
  #   id: 'Deploy MySQL'

  # - name: 'gcr.io/cloud-builders/kubectl'
  #   args: ['apply', '-f', 'metabase-deployment.yaml']
  #   id: 'Deploy Metabase'

  # - name: 'gcr.io/cloud-builders/kubectl'
  #   args: ['apply', '-f', 'etl-app-deployment.yaml']
  #   id: 'Deploy ETL App'

  # - name: 'gcr.io/cloud-builders/kubectl'
  #   args: ['apply', '-f', 'init-mongodb-data-fetcher-deployment.yaml']
  #   id: 'Deploy MongoDB Data Fetcher'

  # # Build the Docker image
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['build', '-t', 'LOCATION-docker.pkg.dev/PROJECT-ID/REPOSITORY/IMAGE:TAG', '.']

  # # Push the image to Artifact Registry
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['push', 'LOCATION-docker.pkg.dev/PROJECT-ID/REPOSITORY/IMAGE:TAG']

